---
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../consts";
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
  </head>
  <body>
    <Header title={SITE_TITLE} />
    <main>
      <button id="login" style="display: none">Sign-in</button>
      <button id="logout" style="display: none">Sign-out</button>
      <button id="count" style="display: none">Count</button>

      <h2 id="result" style="display: none"></h2>

      <script>
        // @ts-nocheck

        import {
          initSatellite,
          setDoc,
          authSubscribe,
          signIn,
          signOut,
          getDoc,
        } from "@junobuild/core";
        import { initOrbiter } from "@junobuild/analytics";

        // Initialize Juno
        document.addEventListener(
          "DOMContentLoaded",
          async () => {
            await Promise.allSettled([
              initSatellite(),
              initOrbiter(),
            ]);
          },
          { once: true },
        );

        let user = undefined;

        authSubscribe((u) => {
          user = u;

          document.querySelector("#login").style.display =
            user === null ? "block" : "none";
          document.querySelector("#logout").style.display =
            user !== undefined && user !== null ? "block" : "none";
          document.querySelector("#count").style.display =
            user !== undefined && user !== null ? "block" : "none";
          document.querySelector("#result").style.display =
            user !== undefined && user !== null ? "block" : "none";
        });

        let counter = undefined;
        authSubscribe(async (user) => {
          if (user === null) {
            counter = undefined;
            return;
          }

          counter = await getDoc({
            collection: "counter",
            key: user.key,
          });

          displayCounter();
        });

        const displayCounter = () => {
          const result = document.querySelector("#result");
          if (result !== null) {
            result.textContent = counter?.data.counter ?? 0;
          }
        };

        // Insert a document in Juno's datastore
        const count = async () => {
          if (!user) {
            console.error("Ummm this is unexpected, you are not signed in...");
            return;
          }

          const count = document.querySelector("#count") as HTMLElement;
          if (count !== null) {
            count.disabled = true;
          }

          try {
            counter = await setDoc({
              collection: "counter",
              doc: {
                ...(counter !== undefined && counter),
                key: user.key,
                data: {
                  counter: (counter?.data.counter ?? 0) + 1,
                },
              },
            });

            displayCounter();
          } catch (err) {
            console.error(err);
          }

          if (count !== null) {
            count.disabled = false;
          }
        };

        document
          .querySelector("#count")
          ?.addEventListener("click", count, { passive: true });

        document
          .querySelector("#login")
          ?.addEventListener("click", signIn, { passive: true });
        document
          .querySelector("#logout")
          ?.addEventListener("click", signOut, { passive: true });
      </script>
    </main>
    <Footer />
    <style>
      button {
        display: block;
        border: 1px solid rgb(var(--gray));
        margin: 0 0 1rem;
        padding: 0.5rem 1rem;
        width: auto;
        overflow: visible;
        background: white;
        color: inherit;
        font: inherit;
        -webkit-font-smoothing: inherit;
        -moz-osx-font-smoothing: inherit;
        -webkit-appearance: none;
        border-radius: 8px;
        cursor: pointer;
      }

      button[disabled] {
        background: transparent;
        color: rgb(var(--gray));
      }
    </style>
  </body>
</html>
